services:

  cheshire-cat-core:
    build:
      context: ./core
      target: build
    container_name: cheshire_cat_core
    # Uncomment the two lines below to use your .env (see .env.example)
    # env_file:
    #  - .env
    ports:
      - ${CCAT_CORE_PORT:-1865}:80
      - "5678:5678" # only for development purposes (take away in production)
    extra_hosts:
      - "host.docker.internal:host-gateway" # This adds an entry to /etc/hosts file in the container mapping host.docker.internal to the host machine IP addr, allowing the container to access services running on the host, not only on Win and Mac but also Linux. See https://docs.docker.com/desktop/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host and https://docs.docker.com/reference/cli/docker/container/run/#add-host
    environment:
      # Timezone
      - TZ=${CCAT_TIMEZONE:-UTC}
      - PYTHONUNBUFFERED=1
      - CCAT_QDRANT_HOST=cheshire_cat_vector_memory
      - CCAT_QDRANT_PORT=6333
      - CCAT_API_KEY=test
      - CCAT_API_KEY_WS=test
      - CCAT_REDIS_HOST=cheshire_cat_redis
      - CCAT_REDIS_PORT=6379
    volumes:
      - ./core:/app
    command:
      - python
      - "-m"
      - "cat.main"
    restart: unless-stopped
    depends_on:
      cheshire-cat-redis:
        condition: service_healthy
      cheshire-cat-healthcheck:
        condition: service_healthy

  cheshire-cat-redis:
    image: redis/redis-stack-server:latest
    container_name: cheshire_cat_redis
    command: >
      sh -c 'redis-stack-server --protected-mode no --save 60 1 --dir /data --appendonly yes --appendfsync everysec'
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  cheshire-cat-vector-memory:
    image: qdrant/qdrant:latest
    container_name: cheshire_cat_vector_memory
    ports:
      - "6333:6333"
    volumes:
      - ./core/cat/data/long_term_memory/vector:/qdrant/storage
    restart: unless-stopped

  cheshire-cat-healthcheck:
    image: curlimages/curl:latest
    container_name: cheshire_cat_healthcheck
    entrypoint: [ "/bin/sh", "-c", "--", "while true; do sleep 30; done;" ]
    depends_on:
      - cheshire-cat-vector-memory
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://cheshire-cat-vector-memory:6333/readyz" ]
      interval: 10s
      timeout: 2s
      retries: 5
    restart: always

volumes:
  qdrant_data:
  redis-data:
